name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # ***************************** #
# >>>>>>> Windows Build <<<<<<< #
# ***************************** #
  maui-windows:
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    # Needed for Windows build
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1
      with:
        vs-prerelease: true

    - name: Generate version number using date and run number
      shell: pwsh
      id: version-creator
      run: |
        $buildDay = Get-Date -Format "yyyy.Mdd"
        $ver = $buildDay + "." + $env:GITHUB_RUN_NUMBER + ".0"
        echo "::set-output name=APP_VERSION::$ver"

    - name: Install MAUI workloads (currently required for hosted runners)
      shell: pwsh
      run: dotnet workload install maui --ignore-failed-sources

    - name: Restore NuGet packages
      shell: pwsh
      run: dotnet restore Multicopy.MAUI/Multicopy.MAUI.csproj #--configfile src/MAUI/NuGet.Config
      #env:
        #TELERIK_USERNAME: ${{ secrets.MyTelerikAccountUsername }}
        #TELERIK_PASSWORD: ${{ secrets.MyTelerikAccountPassword }}

    - name: Build Maui WinUI project
      shell: pwsh
      run: |
        # On Windows, we use msbuild instead of dotnet build
        msbuild Multicopy.MAUI/Multicopy.MAUI.csproj -r -p:Configuration=Debug -p:TargetFramework=net6.0-windows10.0.19041
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: windows-v${{ steps.version-creator.outputs.APP_VERSION }}-artifacts
        path: '*Windows\**\*.msix'
